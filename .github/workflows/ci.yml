name: CI
on:
  push:  # Trigger workflow on a push event
    branches: [develop, master]
  pull_request:  # Trigger workflow on a pull request event
    types: [opened, synchronize, reopened]
jobs:
  build:  # Define a job named 'build'
    defaults:  # Set default values for the job
      run:
        shell: bash
        working-directory: "/opt/carma/"
    runs-on: ubuntu-latest  # Run on the latest version of Ubuntu
    env:  # Define environment variables for the container
      BUILD_WRAPPER_OUT_DIR: "/home/multiple_object_tracking/build/bw-output"
      TERM: xterm
      SONAR_SCANNER_VERSION: "5.0.1.3006"

    steps:  # Define a series of steps to execute in the job
    - name: Checkout ${{ github.event.repository.name }}  # Checkout the repository
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0  # Disable shallow clones for better analysis relevance
    - name: Set up JDK 17
      uses: actions/setup-java@v3 # The setup-java action provides the functionality for GitHub Actions runners for Downloading and setting up a requested version of Java
      with:
        java-version: 17
        distribution: "temurin"
    - name: Set up Python 3.8 for gcovr  # Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Gcovr 5.0  # Install Gcovr 5.0
      run: |
        apt-get update && apt-get install -y curl unzip
        curl -L -o gcovr https://github.com/gcovr/gcovr/archive/5.0.tar.gz
        tar -xzvf gcovr
        cd gcovr-5.0
        chmod +x gcovr
    - name: Install sonar-scanner and build-wrapper  # Install SonarScanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v2
    - name: Build & Run Tests  # Build and run tests for multiple_object_tracking package and run gcovr before sonar scan.
      run: |
        cd ${GITHUB_WORKSPACE}
        build-wrapper-linux-x86-64 --out-dir ${GITHUB_WORKSPACE}/build/bw-output ${GITHUB_WORKSPACE}/build.sh --config Release
        cd build
        ctest --output-on-failure
        gcovr --sonarqube coverage.xml -k -s -r .
        find ${GITHUB_WORKSPACE}/build/" -name "coverage.xml"
    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" #Consult https://docs.sonarcloud.io/advanced-setup/ci-based-analysis/sonarscanner-cli/ for more information and options
