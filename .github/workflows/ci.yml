name: CI
on:
  push:
    branches: [develop, master]
  pull_request:
      types: [opened, synchronize, reopened]
jobs:
  build:  # Define a job named 'build'
    defaults:  # Set default values for the job
      run:
        shell: bash
        working-directory: "/opt/carma/"
    runs-on: ubuntu-latest  # Run on the latest version of Ubuntu

    container:  # Use a Docker container as the execution environment
      image: ghcr.io/usdot-fhwa-stol/carma-builds-x64:carma-system-4.5.0-focal  # Docker image to use
      env:  # Define environment variables for the container
        BUILD_WRAPPER_OUT_DIR: "/opt/carma/src/multiple_object_tracking/build/bw-output"
        TERM: xterm
      options: "--user root"  # Additional Docker container options to set permissions

    steps:  # Define a series of steps to execute in the job
    - name: Checkout ${{ github.event.repository.name }}  # Checkout the repository
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0  # Disable shallow clones for better analysis relevance
        path: src/${{ github.event.repository.name }}  # Specify the destination path
    - name: Move source code  # Move the source code to the desired location
      run: mv $GITHUB_WORKSPACE/src/ /opt/carma/
    - name: Install Dependencies  # Install Dependencies
      run: |
        /opt/carma/src/multiple_object_tracking/scripts/install_dependencies.sh
    - name: Install Gcovr 5.0  # Install Gcovr 5.0
      run: |
        apt update
        DEBIAN_FRONTEND=noninteractive apt install -y curl unzip python3 python3-pip
        python3 -m pip install gcovr==5.0

    - name: Set up JDK 17
      uses: actions/setup-java@v3 # The setup-java action provides the functionality for GitHub Actions runners for Downloading and setting up a requested version of Java
      with:
        java-version: 17
        distribution: "temurin"

    - name: Install sonar-scanner and build-wrapper  # Install SonarScanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v2

    - name: Build & Run Tests  # Build and run tests for multiple_object_tracking package and run gcovr before sonar scan.
      run: |
        chmod 755 -R /opt/carma/src
        cd /opt/carma/src/multiple_object_tracking/
        mkdir build
        COVERAGE_FLAGS="-g --coverage -fprofile-arcs -ftest-coverage"
        cmake -S . -B build -DCMAKE_CXX_FLAGS="${COVERAGE_FLAGS}" -DCMAKE_C_FLAGS="${COVERAGE_FLAGS}" -DCMAKE_BUILD_TYPE="Debug"
        build-wrapper-linux-x86-64 --out-dir /opt/carma/src/multiple_object_tracking/build/bw-output cmake --build build/ --config Release
        cd build
        ctest --output-on-failure
        cd ..
        gcovr --sonarqube build/coverage.xml -k -s -r .

    - name: Find coverage.xml  # Find the coverage.xml file
      shell: bash
      run: |
        find "/opt/carma/src/multiple_object_tracking/build/" -name "coverage.xml"

    - name: Run SonarScanner  # Run SonarScanner for code analysis
      uses: usdot-fhwa-stol/actions/sonar-scanner@main
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        working-dir: "/opt/carma/src/${{ github.event.repository.name }}"
